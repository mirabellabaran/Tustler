<Window x:Class="Tustler.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tustler"
        xmlns:models="clr-namespace:Tustler.Models"
        xmlns:services="clr-namespace:TustlerServicesLib;assembly=TustlerServicesLib"
        xmlns:helpers="clr-namespace:Tustler.Helpers"
        mc:Ignorable="d"
        x:Name="Main"
        Title="Tustler" Height="962" Width="1681"
        Background="{StaticResource NormalBackground}">

    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:MainWindowCommands.CollapseNotifications}" CanExecute="CollapseNotifications_CanExecute" Executed="CollapseNotifications_Executed" />
        <CommandBinding Command="{x:Static local:MainWindowCommands.Exit}" CanExecute="ExitCommand_CanExecute" Executed="ExitCommand_Executed" />
        <CommandBinding Command="{x:Static local:MainWindowCommands.About}" CanExecute="AboutCommand_CanExecute" Executed="AboutCommand_Executed" />
        <CommandBinding Command="{x:Static local:MainWindowCommands.Switch}" CanExecute="SwitchCommand_CanExecute" Executed="SwitchCommand_Executed" />
        <CommandBinding Command="{x:Static local:MainWindowCommands.ClearNotifications}" CanExecute="ClearNotifications_CanExecute" Executed="ClearNotifications_Executed" />
        <CommandBinding Command="{x:Static local:MainWindowCommands.CopyNotification}" CanExecute="CopyNotification_CanExecute" Executed="CopyNotification_Executed" />
        <CommandBinding Command="{x:Static local:MainWindowCommands.EnableMocking}" CanExecute="EnableMocking_CanExecute" Executed="EnableMocking_Executed" />
        <CommandBinding Command="{x:Static local:MainWindowCommands.DisableMocking}" CanExecute="DisableMocking_CanExecute" Executed="DisableMocking_Executed" />
    </Window.CommandBindings>
    
    <Window.Resources>
        <helpers:FractionConverter x:Key="FractionConverter"/>

        <StreamGeometry x:Key="notification_icon_info">
            M0 2a2 2 0 012-2h12a2 2 0 012 2v12a2 2 0 01-2 2H2a2 2 0 01-2-2V2zm8.93 4.588l-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM8 5.5a1 1 0 100-2 1 1 0 000 2z
        </StreamGeometry>

        <GeometryGroup x:Key="notification_icon_error" FillRule="EvenOdd">
            <StreamGeometry>
                M8 15A6 6 0 108 3a6 6 0 000 12zm0 1A7 7 0 108 2a7 7 0 000 14z
            </StreamGeometry>
            <StreamGeometry>
                M8 4.5a.5.5 0 01.5.5v4a.5.5 0 01-.053.224l-1.5 3a.5.5 0 11-.894-.448L7.5 8.882V5a.5.5 0 01.5-.5z
            </StreamGeometry>
            <StreamGeometry>
                M.86 5.387A2.5 2.5 0 114.387 1.86 8.035 8.035 0 00.86 5.387zM11.613 1.86a2.5 2.5 0 113.527 3.527 8.035 8.035 0 00-3.527-3.527z
            </StreamGeometry>
            <StreamGeometry>
                M11.646 14.146a.5.5 0 01.708 0l1 1a.5.5 0 01-.708.708l-1-1a.5.5 0 010-.708zm-7.292 0a.5.5 0 00-.708 0l-1 1a.5.5 0 00.708.708l1-1a.5.5 0 000-.708zM5.5.5A.5.5 0 016 0h4a.5.5 0 010 1H6a.5.5 0 01-.5-.5z
            </StreamGeometry>
            <StreamGeometry>
                M7 1h2v2H7V1z
            </StreamGeometry>
        </GeometryGroup>

        <StreamGeometry x:Key="chevron_compact_up">
            M7.776 5.553a.5.5 0 01.448 0l6 3a.5.5 0 11-.448.894L8 6.56 2.224 9.447a.5.5 0 11-.448-.894l6-3z
        </StreamGeometry>

        <StreamGeometry x:Key="chevron_compact_down">
            M1.553 6.776a.5.5 0 01.67-.223L8 9.44l5.776-2.888a.5.5 0 11.448.894l-6 3a.5.5 0 01-.448 0l-6-3a.5.5 0 01-.223-.67z
        </StreamGeometry>

        <DataTemplate DataType="{x:Type services:ApplicationMessageInfo}">
            <Border BorderBrush="DarkGray" BorderThickness="2" Padding="5" Margin="2">
                <Border.Resources>
                    <Style x:Key="textBlockHeaderStyles" TargetType="TextBlock" >
                        <Setter Property="Background" Value="{StaticResource NormalBackground}" />
                        <Setter Property="Padding" Value="2" />
                        <Setter Property="Margin" Value="10, 0, 0, 0" />
                    </Style>
                    <Style x:Key="textBlockStyles" TargetType="TextBlock" >
                        <Setter Property="Margin" Value="10, 0, 0, 0" />
                    </Style>
                </Border.Resources>
                <StackPanel Orientation="Horizontal">
                    <Viewbox>
                        <Grid Margin="1">
                            <Path Stretch="Fill" Fill="AliceBlue" Data="{StaticResource notification_icon_info}" />
                        </Grid>
                    </Viewbox>
                    <TextBlock Text="{Binding Path=Message}" VerticalAlignment="Center" Style="{StaticResource textBlockHeaderStyles}" />
                    <TextBlock Text="{Binding Path=Detail}" VerticalAlignment="Center" Style="{StaticResource textBlockStyles}" />
                    <TextBlock Text="{Binding Path=Timestamp}" VerticalAlignment="Center" Style="{StaticResource textBlockStyles}" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <DataTemplate DataType="{x:Type services:ApplicationErrorInfo}">
            <StackPanel Orientation="Horizontal" Height="40" HorizontalAlignment="Stretch">
                <StackPanel.Resources>
                    <Style x:Key="textBlockHeaderStyles" TargetType="TextBlock" >
                        <Setter Property="Background" Value="{StaticResource NormalBackground}" />
                        <Setter Property="Padding" Value="2" />
                        <Setter Property="Margin" Value="10, 0, 0, 0" />
                    </Style>

                    <BooleanToVisibilityConverter x:Key="boolConverter" />

                    <Style x:Key="toggleContent" TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonDark}">
                        <Setter Property="FontSize" Value="10" />
                        <Setter Property="Width" Value="70" />
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content" Value="Show less" />
                            </Trigger>

                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Content" Value="Show more" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                </StackPanel.Resources>
                <Border BorderBrush="DarkGray" BorderThickness="2" Padding="5" Margin="2">
                    <StackPanel Orientation="Horizontal">
                        <Viewbox>
                            <Grid Margin="1">
                                <Path Stretch="Fill" Fill="AliceBlue" Data="{StaticResource notification_icon_error}" />
                            </Grid>
                        </Viewbox>
                        <TextBlock Text="{Binding Path=Message}" VerticalAlignment="Center" Style="{StaticResource textBlockHeaderStyles}" />
                    </StackPanel>
                </Border>
                <Border BorderBrush="DarkGray" BorderThickness="2" Width="{Binding Converter={StaticResource FractionConverter}, ConverterParameter=0.4, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollContentPresenter}}, Path=ActualWidth}" Padding="5" Margin="2" Visibility="{Binding ElementName=showHide, Path=IsChecked, Converter={StaticResource boolConverter}}">
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                        <TextBlock Height="100" TextWrapping="Wrap" Text="{Binding Path=Exception.Message}" ToolTip="{Binding Path=Context}" Style="{StaticResource TextBlockDark}" />
                    </ScrollViewer>
                </Border>
                <ToggleButton x:Name="showHide" Height="30" Style="{StaticResource toggleContent}" />
            </StackPanel>
        </DataTemplate>

        <Style TargetType="Button" x:Key="collapseButtonStyle" BasedOn="{StaticResource ButtonDark}">
            <Setter Property="Background" Value="{StaticResource ContrastingBackground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="DarkGray" BorderThickness="1,0,1,1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Storyboard x:Key="notificationsStoryboard" Completed="NotificationsStoryboard_Completed">
            <DoubleAnimation
                Storyboard.TargetName="lbNotifications" 
                Storyboard.TargetProperty="Height"
                FillBehavior="Stop"
                From="90.0" To="0.0" Duration="0:0:0.3" />
        </Storyboard>

    </Window.Resources>
        
    <DockPanel>
        <StatusBar DockPanel.Dock="Bottom" Height="40">
            <StatusBarItem>
                <StatusBarItem.ContextMenu>
                    <ContextMenu Opened="ContextMenu_Opened">
                        <!-- CommandTarget added for known bug: see https://social.msdn.microsoft.com/Forums/vstudio/en-US/7bd75a7c-eab4-4f3a-967b-94a9534a7455/why-is-my-contextmenu-item-disabled -->
                        <MenuItem Command="{x:Static local:MainWindowCommands.EnableMocking}" CommandTarget="{Binding Path=PlacementTarget,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                        <MenuItem Command="{x:Static local:MainWindowCommands.DisableMocking}" CommandTarget="{Binding Path=PlacementTarget,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
                    </ContextMenu>
                </StatusBarItem.ContextMenu>
                <Label Background="DarkSlateGray">
                    <Border x:Name="bdrStatusBarIsMocked" Padding="2" BorderThickness="2" BorderBrush="{StaticResource ContrastingBackground}">
                        <TextBlock x:Name="tbStatusBarIsMocked" FontSize="10" Text="Standard Mode" />
                    </Border>
                </Label>
            </StatusBarItem>
            <Separator />
        </StatusBar>
        <DockPanel x:Name="panContent" DockPanel.Dock="Top">
            <DockPanel x:Name="panTree" DockPanel.Dock="Left" Width="200">

                <Menu x:Name="menuTasks" DockPanel.Dock="Top" Margin="10,10,10,10" MenuItem.Click="MenuItem_Click" MenuItem.SubmenuOpened="MenuItem_SubmenuOpenedAsync">
                    <MenuItem Header="Application">
                        <MenuItem Header="Help">
                            <Separator />
                            <MenuItem Command="{x:Static local:MainWindowCommands.About}" />
                        </MenuItem>
                        <MenuItem Command="{x:Static local:MainWindowCommands.Exit}" />
                    </MenuItem>
                    <MenuItem Header="Edit" Loaded="Window_Loaded">
                        <MenuItem Command="ApplicationCommands.Cut" />
                        <MenuItem Command="ApplicationCommands.Copy" />
                        <MenuItem Command="ApplicationCommands.Paste" />
                    </MenuItem>
                </Menu>

                <TreeView x:Name="tvActions" DockPanel.Dock="Top" Margin="10" TreeViewItem.Expanded="TreeViewItem_Expanded" MouseDoubleClick="TreeView_DoubleClick" />
            </DockPanel>
            <DockPanel>
                <Border DockPanel.Dock="Top" Padding="20,20,20,0">
                    <StackPanel>
                        <ListBox x:Name="lbNotifications" Visibility="Visible" Height="90" DockPanel.Dock="Top" HorizontalContentAlignment="Stretch" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ItemsSource="{Binding Source={StaticResource applicationNotifications}, Path=Notifications}" Style="{StaticResource ListBoxDark}">
                            <ListBox.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Clear All" Command="{x:Static local:MainWindowCommands.ClearNotifications}" />
                                    <MenuItem Header="Copy Selected" Command="{x:Static local:MainWindowCommands.CopyNotification}" />
                                </ContextMenu>
                            </ListBox.ContextMenu>
                        </ListBox>
                        <Button DockPanel.Dock="Bottom" Height="10" Focusable="False" Command="{x:Static local:MainWindowCommands.CollapseNotifications}" Style="{StaticResource collapseButtonStyle}">
                            <Viewbox>
                                <Grid Margin="1">
                                    <Path x:Name="collapseButtonPath" Stretch="Fill" Fill="{StaticResource ContrastingBackground}" Data="{StaticResource chevron_compact_up}" />
                                </Grid>
                            </Viewbox>
                        </Button>
                    </StackPanel>
                </Border>
                <DockPanel x:Name="panControlsContainer">
                    <!--UserControl here-->
                </DockPanel>
            </DockPanel>
        </DockPanel>
    </DockPanel>
</Window>
